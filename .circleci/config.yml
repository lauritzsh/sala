version: 2

jobs:
  build_client:
    docker:
      - image: node:10.4.1
    working_directory: ~/code/client
    steps:
      - checkout:
          path: ~/code

      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}

      - run: yarn
      - run: yarn build

      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

      - run: pwd
      - run: ls
      - run: ls build

      - run: mkdir -p /tmp/client

      - persist_to_workspace:
          root: /tmp/client
          paths:
            - build
  build_server:
    docker:
      - image: elixir:1.6.6
    working_directory: ~/code/api
    steps:
      - checkout:
          path: ~/code

      - restore_cache:
          key: dependency-cache-{{ checksum "mix.lock" }}

      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run:
          command: mix do deps.get, release
          environment:
            MIX_ENV: prod

      - save_cache:
          key: dependency-cache-{{ checksum "mix.lock" }}
          paths:
            - deps
  deploy:
    machine:
        enabled: true
    working_directory: ~/code
    steps:
      - run: sudo apt update
      - run: sudo apt install -y rsync

      - run: ssh-keyscan $HOST >> ~/.ssh/known_hosts

      - attach_workspace:
          at: ~/client

      - run: ls
      - run: ls ~

      ## Deploying server
      - run: rsync -va --delete api/_build/prod/rel/sala/releases/0.1.0/sala.tar.gz $CI_USER@$HOST:$OUT_DIR/server
      - run: ssh $CI_USER@$HOST "cd $OUT_DIR/server && tar xvzf sala.tar.gz"
      # We don't care if there is nothing to stop
      - run: ssh $CI_USER@$HOST "$OUT_DIR/server/bin/sala stop; echo 0"
      - run: ssh $CI_USER@$HOST "$OUT_DIR/server/bin/sala start"

      ## Deploying client
      - run: rsync -va --delete client/build/* $CI_USER@$HOST:$OUT_DIR/client
    

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_client
      # - build_server
      - deploy:
          requires:
            - build_client
      #       - build_server

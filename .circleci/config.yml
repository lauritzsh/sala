version: 2

jobs:
  client:
    docker:
      - image: node:10.4.1
    working_directory: ~/code/client
    steps:
      - checkout:
          path: ~/code

      - run: apt update
      - run: apt install -y rsync

      - restore_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}

      - run: yarn
      - run: yarn build

      - run: ssh-keyscan $HOST >> ~/.ssh/known_hosts
      - run: rsync -va --delete build/* $CI_USER@$HOST:$OUT_DIR/client

      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
  server:
    docker:
      - image: elixir:1.6.6
    working_directory: ~/code/api
    steps:
      - checkout:
          path: ~/code

      - run: apt update
      - run: apt install -y rsync

      - restore_cache:
          key: dependency-cache-{{ checksum "mix.lock" }}

      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run:
          command: mix do deps.get, release
          environment:
            MIX_ENV: prod

      - save_cache:
          key: dependency-cache-{{ checksum "mix.lock" }}
          paths:
            - deps

      - run: ssh-keyscan $HOST >> ~/.ssh/known_hosts
      - run: rsync -va --delete _build/prod/rel/sala/releases/0.1.0/sala.tar.gz $CI_USER@$HOST:$OUT_DIR/server
      - run: ssh $CI_USER@$HOST "cd $OUT_DIR/server && tar xvzf sala.tar.gz"
      - run: ssh $CI_USER@$HOST "$OUT_DIR/server/bin/sala stop; echo 0" # We don't care if there is nothing to stop
      - run: ssh $CI_USER@$HOST "$OUT_DIR/server/bin/sala start"

workflows:
  version: 2
  build_client_and_server:
    jobs:
      # - client
      - server
